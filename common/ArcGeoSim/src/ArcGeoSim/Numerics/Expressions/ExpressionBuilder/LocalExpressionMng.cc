// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
//-----------------------------------------------------------------------------
// Copyright 2000-2022 CEA (www.cea.fr) IFPEN (www.ifpenergiesnouvelles.com)
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: Apache-2.0
//-----------------------------------------------------------------------------
#include "LocalExpressionMng.h"
/* Author : havep at Wed Dec  3 15:54:28 2008
 * Generated by createNew
 */

#include <arcane/utils/FatalErrorException.h>
#include <arcane/utils/TraceInfo.h>

/*---------------------------------------------------------------------------*/

Real
LocalExpressionMng::
constant(const String & name) const
{
  const Real * candidate = constantLookup(name);
  if (candidate) return *candidate;
  throw FatalErrorException(A_FUNCINFO,"Undefined constant");
}

/*---------------------------------------------------------------------------*/

const Real *
LocalExpressionMng::
constantLookup(const String & name) const
{
  ConstantTable::const_iterator ifinder = m_constant_table.find(name);
  if (ifinder == m_constant_table.end()) return NULL;
  else return &ifinder->second;
}

/*---------------------------------------------------------------------------*/

IFunction *
LocalExpressionMng::
function(const String & name) const
{
  FunctionTable::const_iterator ifinder = m_function_table.find(name);
  if (ifinder == m_function_table.end()) return NULL;
  else return ifinder->second;
}

/*---------------------------------------------------------------------------*/

void 
LocalExpressionMng::
setConstant(const String & name, const Real value)
{
  const Real * data = constantLookup(name);
  if (data)
    throw FatalErrorException(A_FUNCINFO,"Already defined constant");
  m_constant_table[name] = value;
}

void 
LocalExpressionMng::
setFunction(const String & name, IFunction * value)
{
  IFunction * data = function(name);
  if (data)
    throw FatalErrorException(A_FUNCINFO,"Already defined function");
  m_function_table[name] = value;
}
