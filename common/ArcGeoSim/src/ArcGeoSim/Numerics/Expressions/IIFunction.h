// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
//-----------------------------------------------------------------------------
// Copyright 2000-2022 CEA (www.cea.fr) IFPEN (www.ifpenergiesnouvelles.com)
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: Apache-2.0
//-----------------------------------------------------------------------------
#ifndef ARCGEOSIM_EXPRESSIONS_IIFUNCTION_H
#define ARCGEOSIM_EXPRESSIONS_IIFUNCTION_H
/* Author : havep at Thu Oct 30 16:22:37 2008
 * Generated by createNew
 */

namespace Arcane { }
using namespace Arcane;

#include <arcane/utils/UtilsTypes.h>
#include <arcane/utils/String.h>
#include <arcane/ArcaneVersion.h>

class IIFunction
{
public:
  /** Constructeur de la classe */
  IIFunction() 
    {
      ;
    }
  
  /** Destructeur de la classe */
  virtual ~IIFunction() { }
  
public:
  //! Initialisation
  virtual void init() = 0;

  //! Getting dimension of in-space
  virtual Integer getInDimension() const = 0;

  //! Getting dimension of out-space
  virtual Integer getOutDimension() const = 0;
  
  //! Setting parameter
  virtual void setParameter(const String & name, const Real & parameter) = 0;
  virtual void setParameter(      Integer index, const Real & parameter) = 0;
 
  //! Getting number of parameter
  virtual Integer nbParameter() const = 0;
  
  //! Getting name of parameter
  virtual String parameterName(Integer index) const = 0;

  //! Setting vectorized variable
  virtual void setVariable(const String & name, const Array<Real> & variable) = 0;
  virtual void setVariable(      Integer index, const Array<Real> & variable) = 0;

  //! Getting name of variable
  virtual String variableName(Integer index) const = 0;

  //! Setting evaluation vectorized result
  virtual void setEvaluationResult(Array<Real> & result) = 0;

  //! Setting derivation vectorized result
  /*! Derivation following @name di variable */
  virtual void setDerivationResult(Integer di, Array<Real> & result) = 0;

  //! Setting derivation vectorized result
  /*! Derivation following @name di variable */
  virtual void setDerivationResult(const String & di, Array<Real> & result) = 0;
  
  //! Eval vectorized data service function
  virtual void eval() = 0;

  //! Cleanup after evaluation
  virtual void cleanup() = 0;
};

#endif /* ARCGEOSIM_EXPRESSIONS_IIFUNCTION_H */
