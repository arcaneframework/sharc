// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
//-----------------------------------------------------------------------------
// Copyright 2000-2022 CEA (www.cea.fr) IFPEN (www.ifpenergiesnouvelles.com)
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: Apache-2.0
//-----------------------------------------------------------------------------
#ifndef ARCGEOSIM_TESTS_FIELDSERVICEVALIDATOR_FIELDSERVICEVALIDATORSERVICE_H
#define ARCGEOSIM_TESTS_FIELDSERVICEVALIDATOR_FIELDSERVICEVALIDATORSERVICE_H
/* Author : dechaiss at Tue Jul  7 09:51:28 2009
 * Generated by createNew
 */

// Interface du service
#include "ArcGeoSim/Tests/IServiceValidator.h"
#include <ArcGeoSim/Utils/ItemTools.h>

namespace Arcane
{
}
using namespace Arcane;

struct FieldServiceValidatorTypes
{
  enum eComparator
  {
    L2, L2Relative, Linf, MaxRelativeError
  };
};
#include "ArcGeoSim/Tests/Utils/IDataAccessor.h"
#include "FieldServiceValidator_axl.h"
#include "ArcGeoSim/Mesh/Geometry/IGeometryMng.h"

class FieldServiceValidatorService : public ArcaneFieldServiceValidatorObject
{
public:
  /** Constructeur de la classe */
  FieldServiceValidatorService(const Arcane::ServiceBuildInfo & sbi) 
    : ArcaneFieldServiceValidatorObject(sbi)
    , m_initialized(false)
    , m_geometry_mng(NULL)
  {
    ;
  }

  /** Destructeur de la classe */
  ~FieldServiceValidatorService()
  {
  }

public:

  //! Initialisation
  void
  init();

  //! Apply service function
  int
  validate();

  template<typename VarT1,typename VarT2>
  int
  validateVariable(VarT1 & sol, VarT2 & var);


private:

  //! Init test
  bool m_initialized;

  //! Mesh group
  ItemGroup m_mesh_group;

  //! Geometry manager
  IGeometryMng* m_geometry_mng;

  //! Compute relative error (based on math::relativeError)
  //Real
  //relativeError(Real a, Real b);

  template<typename VarT>
  VarT relativeError(VarT a, VarT b);

};

#endif /* ARCGEOSIM_TESTS_FIELDSERVICEVALIDATOR_FIELDSERVICEVALIDATORSERVICE_H */
