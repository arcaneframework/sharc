// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
//-----------------------------------------------------------------------------
// Copyright 2000-2022 CEA (www.cea.fr) IFPEN (www.ifpenergiesnouvelles.com)
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: Apache-2.0
//-----------------------------------------------------------------------------
// -*- C++ -*-
#ifndef ARCTEMREFACTORING_ARCTEMUTILS_OUTPUTFORMATTING_MULTICOLUMN_H
#define ARCTEMREFACTORING_ARCTEMUTILS_OUTPUTFORMATTING_MULTICOLUMN_H
/* Author : desrozis at Mon Jan 13 09:37:35 2014
 * Generated by createNew
 */

#include "ArcGeoSim/Utils/OutputFormatting/Indentation.h"

#include <arcane/utils/String.h>
#include <arcane/utils/StringBuilder.h>

namespace OutputFormatting {

  class MultiColumn
  {
  public:

    MultiColumn(int number_of_columns, char indentation)
      : m_number_of_columns(number_of_columns)
      , m_indentation(indentation) {}

    MultiColumn& operator<<(const char* c)
    {
      return operator<<(std::string(c));
    }

    MultiColumn& operator<<(const std::string& s)
    {
      Arcane::StringBuilder sb(m_value);
      sb += s;
      m_value = sb.toString();
      return *this;
    }

    template <typename T>
    MultiColumn& operator<<(const T& t)
    {
      std::stringstream ss;
      ss << t;
      return operator<<(ss.str());
    }


    Arcane::Integer numberOfColumns() const { return m_number_of_columns; }

    const Arcane::String& value() const { return m_value; }

    const Indentation& indentation() const { return m_indentation; }

  private:

    Arcane::Integer m_number_of_columns;

    Arcane::String m_value;

    Indentation m_indentation;
  };

}

#endif /* ARCTEMREFACTORING_ARCTEMUTILS_OUTPUTFORMATTING_MULTICOLUMN_H */
