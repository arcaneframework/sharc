// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
//-----------------------------------------------------------------------------
// Copyright 2000-2022 CEA (www.cea.fr) IFPEN (www.ifpenergiesnouvelles.com)
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: Apache-2.0
//-----------------------------------------------------------------------------
#include "ReplayTimeStep.h"
/* Author : desrozis at Sun Oct 26 21:28:48 2014
 * Generated by createNew
 */

#ifdef WIN32
#include <ciso646>
#endif

#include "ArcGeoSim/Time/ITimeStepComputer.h"
#include "ArcGeoSim/Time/ITimeLine.h"

#include "ArcGeoSim/Appli/AppService.h"

extern "C" ISubDomain* _arcaneGetDefaultSubDomain();

#if (ARCANE_VERSION < 12003)  
#include <arcane/ITimeLoopMng.h>
#endif

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

BEGIN_ARCGEOSIM_NAMESPACE

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

TimeStep::Replay::
Replay()
  : m_post_message(true)
  , m_computer(NULL) {}

/*---------------------------------------------------------------------------*/

TimeStep::Replay::
Replay(TimeStep::IComputer* computer)
  : m_post_message(true)
  , m_computer(computer) {}

/*---------------------------------------------------------------------------*/

// Ce n'est pas la recopie qui postera le message
TimeStep::Replay::
Replay(const Replay& r)
  : m_post_message(false)
  , m_computer(r.m_computer) {}

/*---------------------------------------------------------------------------*/

TimeStep::Replay::
~Replay()
{
  if(not m_post_message) return;

  ArcGeoSim::AppService<ArcGeoSim::ITimeLine> time;

  if(m_computer) {
    time->evolution().replay(m_computer);
  } else {
    time->evolution().replay();
  }
#if (ARCANE_VERSION < 12003)  
  ISubDomain* sd = _arcaneGetDefaultSubDomain();

  sd->timeLoopMng()->goBackward();
#endif
}

/*---------------------------------------------------------------------------*/

void
TimeStep::Replay::
operator[](Arcane::String message)
{
  ISubDomain* sd = _arcaneGetDefaultSubDomain();

  sd->traceMng()->pwarning() << "Restore time step : " << message;
}

/*---------------------------------------------------------------------------*/

TimeStep::ReplayException::
ReplayException(Arcane::String message)
#if (ARCANE_VERSION >= 12003)
  : Arcane::GoBackwardException(message)
  , m_message(message)
#else
  : m_message(message)
#endif
{
  m_replay[message];
}

/*---------------------------------------------------------------------------*/

TimeStep::ReplayException::
ReplayException(TimeStep::IComputer* computer,
                Arcane::String message)
#if (ARCANE_VERSION >= 12003)  
  : Arcane::GoBackwardException(message)
  , m_message(message)
#else
  : m_message(message)
#endif
  , m_replay(computer)
{
  m_replay[message];
}

/*---------------------------------------------------------------------------*/

TimeStep::ReplayException::
ReplayException(const ReplayException& r)
#if (ARCANE_VERSION >= 12003)  
  : Arcane::GoBackwardException(r.m_message)
  , m_message(r.m_message)
#else
  : m_message(r.m_message)
#endif
  , m_replay(r.m_replay) {}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

END_ARCGEOSIM_NAMESPACE

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/
