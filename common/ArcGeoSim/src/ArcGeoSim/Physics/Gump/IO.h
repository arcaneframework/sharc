// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
//-----------------------------------------------------------------------------
// Copyright 2000-2022 CEA (www.cea.fr) IFPEN (www.ifpenergiesnouvelles.com)
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: Apache-2.0
//-----------------------------------------------------------------------------
#ifndef ARCGEOSIM_PHYSICS_GUMP_IO_H
#define ARCGEOSIM_PHYSICS_GUMP_IO_H
/* Author : desrozis at Mon Jun 29 16:05:37 2015
 * Generated by createNew
 */

#include "ArcGeoSim/Physics/Gump/Entity.h"
#include "ArcGeoSim/Physics/Gump/Property.h"

#include <iostream>

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

namespace Gump {

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

inline std::ostream& operator<<(std::ostream& nout, const Gump::Entity& e)
{
  nout << "entity[name='" << e.name()
       << "',kind=" << e.kind()
       << ",tag=" << e.tag()
       << ",uid=" << e.uniqueId()
       << ",fid=" << e.familyId() <<"]";
  return nout;
}

/*---------------------------------------------------------------------------*/

inline std::ostream& operator<<(std::ostream& nout, const Gump::Property& p)
{
  nout << "Property '" << p.name()
       << "' {id=" << p.uniqueId()
       << ",dim='" << p.dimension()
       << "',type='" << p.dataType()
       << "'}";
  if(p.dimension() == eVectorial)
    nout << "[size=" << p.size() << "]";
  return nout;
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

#endif /* ARCGEOSIM_PHYSICS_GUMP_IO_H */
