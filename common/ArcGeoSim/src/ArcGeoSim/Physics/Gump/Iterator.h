// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
//-----------------------------------------------------------------------------
// Copyright 2000-2022 CEA (www.cea.fr) IFPEN (www.ifpenergiesnouvelles.com)
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: Apache-2.0
//-----------------------------------------------------------------------------
#ifndef ARCGEOSIM_PHYSICS_GUMP_ITERATOR_H
#define ARCGEOSIM_PHYSICS_GUMP_ITERATOR_H
/* Author : desrozis at Mon Jun 29 16:05:37 2015
 * Generated by createNew
 */

#include "ArcGeoSim/Physics/Gump/Private.h"

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

namespace Gump {
  
/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

template<typename T>
class IteratorT
{
public:

  IteratorT(Private::Entity* const * e)
    : m_entity(e)
  {
    ARCANE_ASSERT((e != NULL),("Pointer null"));
  }

  void operator++()
  {
    m_entity++;
  }

  T operator*()
  {
    return T(*m_entity);
  }

  bool operator!=(const IteratorT<T>& p)
  {
    return m_entity != p.m_entity;
  }

private:

  Private::Entity* const * m_entity;
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

#endif /* ARCGEOSIM_PHYSICS_GUMP_ITERATOR_H */
