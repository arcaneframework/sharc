// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ExpressionBuilderGenerator {
    using System;
    
    
    public partial class ServiceGenerator : ServiceGeneratorBase {
        
        
        #line 254 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"

  private static string Indent(int count)
  {
    return "".PadLeft(count);
  }
  private string SignatureNxM(int n, int m, string in_arg, string out_arg, int padding)
  {
    int extra = in_arg.Length - out_arg.Length;
    string s = "";
    if(n > 0) { 
      s = String.Format("{0} var0,\n", in_arg); 
    }
    for(int i = 1; i < n; ++i) {
      s += String.Format("{0}{1} var{2},\n", Indent(padding), in_arg, i);
    }
    for(int i = 0; i < m-1; ++i) {
      s += String.Format("{0}{1} res{2}", Indent(padding+extra), out_arg, i);
    } 
    s += String.Format("{0}{1} res{2}", Indent(padding+extra), out_arg, m-1);
    return s;
  }
  private string ArgumentsNxM(int n, int m, int padding)
  {
    string s = "";
    if(n > 0) { 
      s = "var0,\n"; 
    }
    for(int i = 1; i < n; ++i) {
      s += String.Format("{0}var{1},\n", Indent(padding), i);
    }
    for(int i = 0; i < m-1; ++i) {
      s += String.Format("{0}res{1}", Indent(padding), i);
    } 
    s += String.Format("{0}res{1}", Indent(padding), m-1);
    return s;
  }
  private string InRealSignatureNx1(int n, int padding)
  {
    if(n == 1) { 
      return "const Arcane::Real& var0"; 
    }
    string s = "";
    if(n > 0) { 
      s = "const Arcane::Real& var0,\n"; 
    }
    for(int i = 1; i < n-1; ++i) {
      s += String.Format("{0}const Arcane::Real& var{1},\n", Indent(padding), i);
    }
    if(n > 1) {
      s += String.Format("{0}const Arcane::Real& var{1}", Indent(padding), n-1);
    }
    return s;
  }
  private string InRealArgumentsNx1(int n, int padding)
  {
    if(n == 1) { 
      return "var0"; 
    }
    string s = "";
    if(n > 0) { 
      s = "var0,\n"; 
    }
    for(int i = 1; i < n-1; ++i) {
      s += String.Format("{0}var{1},\n", Indent(padding), i);
    }
    if(n > 1) {
      s += String.Format("{0}var{1}", Indent(padding), n-1);
    }
    return s;
  }
  private string DiffRealSignatureNx1(int n, int padding)
  {
    string s = "";
    if(n > 0) {
      s = String.Format("const Arcane::Real& var0,\n");
    }
    for(int i = 1; i < n; ++i) {
      s += String.Format("{0}const Arcane::Real& var{1},\n", Indent(padding), i);
    }
    s += String.Format("{0}Arcane::Real& res0,\n", Indent(padding+6));
    for(int i = 0; i < n-1; ++i) {
      s += String.Format("{0}Arcane::Real& diffres{1},\n", Indent(padding+6), i);
    }
    s += String.Format("{0}Arcane::Real& diffres{1}", Indent(padding+6), n-1);
    return s;
  }

        #line default
        #line hidden
        
        private int _nField;
        public int n {
            get {
                return this._nField;
            }
        }
        private int _mField;
        public int m {
            get {
                return this._mField;
            }
        }
        private string _commandlineField;
        public string commandline {
            get {
                return this._commandlineField;
            }
        }

        
        public virtual string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 5 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("// -*- C++ -*-\n/*---------------------------------------------------------------------------*/\n/*--------------------------------------------------------------------------- \n <autogenerated>\n   GENERATED FILE : DO NOT MODIFY THIS FILE\n   This code was generated by a tool. \n   Changes to this file may cause incorrect behavior and will be lost if \n   the code is regenerated.\n   Date of generation : \n   Generator : common/ArcanInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator\n   With options : ");
            
            #line default
            #line hidden
            
            #line 15 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(commandline));
            
            #line default
            #line hidden
            
            #line 15 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("\n </autogenerated>\n  ---------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------*/\n\n#include \"ExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 20 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 20 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 20 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 20 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Core.h\"\n\n#include \"ExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 22 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 22 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 22 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 22 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("_axl.h\"\n\n#include \"ArcGeoSim/Numerics/Expressions/FunctionParser/FunctionParser.h\"\n#include \"ArcGeoSim/Numerics/Expressions/ExpressionBuilder/LocalExpressionMng.h\"\n#include \"ArcGeoSim/Numerics/Expressions/IExpressionMng.h\"\n#include \"ArcGeoSim/Appli/IAppServiceMng.h\"\n\n#include <arcane/ArcaneVersion.h>\n#include <arcane/utils/Array.h>\n#include <arcane/utils/NotImplementedException.h>\n\n/*---------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------*/\n\nclass ExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 36 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 36 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 36 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 36 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service\n  : public ArcaneExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 37 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 37 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 37 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 37 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Object\n  , public ExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 38 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 38 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 38 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 38 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Core\n{\npublic:\n  \n  ExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 42 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 42 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 42 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 42 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service(const Arcane::ServiceBuildInfo & sbi) \n  : ArcaneExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 43 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 43 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 43 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 43 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Object(sbi)\n  , ExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 44 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 44 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 44 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 44 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Core(new FunctionParser,true)\n  , m_initialized(false) {}\n  \n  ~ExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 47 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 47 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 47 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 47 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service() {}\n\npublic:\n\n  //! Initialisation\n  void init();\n  \n  //! Point-wise evaluation\n  void eval(");
            
            #line default
            #line hidden
            
            #line 55 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( SignatureNxM(n, m, 
                             "const Arcane::Real&", 
                             "Arcane::Real&", 
                             12) ));
            
            #line default
            #line hidden
            
            #line 58 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(");\n\n  //! Vector evaluation\n  void eval(");
            
            #line default
            #line hidden
            
            #line 61 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( SignatureNxM(n, m, 
                             "const Arcane::Array<Arcane::Real>&", 
                             "Arcane::Array<Arcane::Real>&", 
                             12) ));
            
            #line default
            #line hidden
            
            #line 64 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(");\n\n  //! Vector evaluation\n  void eval(");
            
            #line default
            #line hidden
            
            #line 67 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( SignatureNxM(n, m, 
                             "Arcane::RealConstArrayView", 
                             "Arcane::RealArrayView", 
                             12) ));
            
            #line default
            #line hidden
            
            #line 70 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(");\n\n");
            
            #line default
            #line hidden
            
            #line 72 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
if(m == 1) {
            
            #line default
            #line hidden
            
            #line 73 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("  //! Scalar return for point-wise evaluation\n  Arcane::Real eval(");
            
            #line default
            #line hidden
            
            #line 74 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InRealSignatureNx1(n, 20) ));
            
            #line default
            #line hidden
            
            #line 74 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(");\n");
            
            #line default
            #line hidden
            
            #line 75 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
}
            
            #line default
            #line hidden
            
            #line 76 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("\n  //! Setting parameter\n  void setParameter(const Arcane::String& name, \n                    const Arcane::Real & parameter);\n  void setParameter(Arcane::Integer index, \n                    const Arcane::Real & parameter);\n     \n  //! Getting number of parameter\n  Arcane::Integer getNbParameter() const;\n  \n  //! Getting name of variable\n  Arcane::String getVariableName(Arcane::Integer index) const;\n  \n  //! Getting name of parameter\n  Arcane::String getParameterName(Arcane::Integer index) const;\n  \nprivate:\n\n  bool m_initialized;\n\n  //! Local Expression Manager\n  LocalExpressionMng m_expression_mng;\n};\n\nusing namespace Arcane;\n\n/*---------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------*/\n\nvoid \nExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 106 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 106 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 106 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 106 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service::\ninit()\n{\n  if (m_initialized) return;\n\n  // Recherche de IExpressionMng\n  IAppServiceMng* app_service_mng = IAppServiceMng::instance(subDomain()->serviceMng());\n  IExpressionMng * expression_mng = app_service_mng->find<IExpressionMng>(false) ;\n\n  // Initialisation du parser\n  m_function_parser->init(expression_mng,&m_expression_mng,traceMng());\n  \n  // Lecture des constantes\n  const Arcane::Integer nbConstant = options()->constant.size();\n  for(Arcane::Integer iconstant=0; iconstant < nbConstant; ++iconstant) {\n    m_expression_mng.setConstant(options()->constant[iconstant].name(),\n                                 options()->constant[iconstant].value());\n    info() << \"Loading local constant \" << options()->constant[iconstant].name();\n  }\n\n  // Parsing de l'expression\n  m_function_parser->parseString(options()->expression());\n\n  // Check expression coherency\n  if(getOutDimension() != 1) { //interroger le parser, pour l'instant 1... \n    throw NotImplementedException(\"ExpressionBuilder cannot manage out dimension greater than 1\");\n  }\n  \n  m_initialized = true;\n}\n\n/*---------------------------------------------------------------------------*/\n\nvoid\nExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 140 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 140 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 140 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 140 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service::\neval(");
            
            #line default
            #line hidden
            
            #line 141 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( SignatureNxM(n, m, 
                      "const Arcane::Real&", 
                      "Arcane::Real&", 
                      5) ));
            
            #line default
            #line hidden
            
            #line 144 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(")\n{\n  if (!m_initialized) {\n    fatal() << \"ExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 147 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 147 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 147 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 147 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service not initialized\";\n  }\n  \n  ExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 150 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 150 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 150 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 150 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Core::eval(");
            
            #line default
            #line hidden
            
            #line 150 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( ArgumentsNxM(n, m, 35) ));
            
            #line default
            #line hidden
            
            #line 150 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(");\n}\n\n/*---------------------------------------------------------------------------*/\n\nvoid\nExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 156 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 156 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 156 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 156 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service::\neval(");
            
            #line default
            #line hidden
            
            #line 157 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( SignatureNxM(n, m, 
                      "const Arcane::Array<Arcane::Real>&", 
                      "Arcane::Array<Arcane::Real>&", 
                      5) ));
            
            #line default
            #line hidden
            
            #line 160 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(")\n{\n  if (!m_initialized)\n    {\n      fatal() << \"ExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 164 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 164 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 164 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 164 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service not initialized\";\n    }\n  \n  ExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 167 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 167 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 167 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 167 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Core::eval(");
            
            #line default
            #line hidden
            
            #line 167 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( ArgumentsNxM(n, m, 35) ));
            
            #line default
            #line hidden
            
            #line 167 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(");\n}\n\n/*---------------------------------------------------------------------------*/\n\nvoid\nExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 173 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 173 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 173 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 173 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service::\neval(");
            
            #line default
            #line hidden
            
            #line 174 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( SignatureNxM(n, m, 
                      "Arcane::RealConstArrayView", 
                      "Arcane::RealArrayView", 
                      5) ));
            
            #line default
            #line hidden
            
            #line 177 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(")\n{\n  if (!m_initialized)\n    {\n      fatal() << \"ExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 181 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 181 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 181 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 181 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service not initialized\";\n    }\n  \n  ExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 184 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 184 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 184 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 184 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Core::eval(");
            
            #line default
            #line hidden
            
            #line 184 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( ArgumentsNxM(n, m, 35) ));
            
            #line default
            #line hidden
            
            #line 184 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(");\n}\n\n");
            
            #line default
            #line hidden
            
            #line 187 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
if(m == 1) {
            
            #line default
            #line hidden
            
            #line 188 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("/*---------------------------------------------------------------------------*/\n\nReal\nExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 191 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 191 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 191 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 191 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service::\neval(");
            
            #line default
            #line hidden
            
            #line 192 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InRealSignatureNx1(n, 5) ));
            
            #line default
            #line hidden
            
            #line 192 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(")\n{\n  if (!m_initialized)\n    {\n      fatal() << \"ExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 196 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 196 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 196 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 196 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service not initialized\";\n    }\n  \n  return ExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 199 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 199 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 199 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 199 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Core::eval(");
            
            #line default
            #line hidden
            
            #line 199 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InRealArgumentsNx1(n, 42) ));
            
            #line default
            #line hidden
            
            #line 199 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(");\n}\n");
            
            #line default
            #line hidden
            
            #line 201 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
}
            
            #line default
            #line hidden
            
            #line 202 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("\n/*---------------------------------------------------------------------------*/\n\nvoid \nExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 206 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 206 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 206 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 206 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service::\nsetParameter(Arcane::Integer index,const Arcane::Real & value)\n{\n  Arcane::String name = m_function_parser->getParameter(index);\n\n  m_function_parser->setParameter(name, value);\n}\n\n/*---------------------------------------------------------------------------*/\n\nvoid \nExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 217 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 217 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 217 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 217 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service::\nsetParameter(const Arcane::String & name, const Arcane::Real & value)\n{\n  m_function_parser->setParameter(name, value);\n}\n\n/*---------------------------------------------------------------------------*/\n\nArcane::Integer\nExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 226 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 226 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 226 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 226 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service::\ngetNbParameter() const\n{\n  return m_function_parser->getNbParameter();\n}\n\n/*---------------------------------------------------------------------------*/\n\nArcane::String \nExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 235 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 235 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 235 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 235 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service::\ngetVariableName(Arcane::Integer index) const\n{\n  return m_function_parser->getVariable(index);\n}\n\n/*---------------------------------------------------------------------------*/\n\nArcane::String\nExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 244 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 244 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 244 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 244 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service::\ngetParameterName(Arcane::Integer index) const\n{\n  return m_function_parser->getParameter(index);\n}\n\n/*---------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------*/\n\nARCANE_REGISTER_SERVICE_EXPRESSIONBUILDERR");
            
            #line default
            #line hidden
            
            #line 253 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 253 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("VR");
            
            #line default
            #line hidden
            
            #line 253 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 253 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("(ExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 253 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 253 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 253 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 253 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(",ExpressionBuilderR");
            
            #line default
            #line hidden
            
            #line 253 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(n));
            
            #line default
            #line hidden
            
            #line 253 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("vR");
            
            #line default
            #line hidden
            
            #line 253 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m));
            
            #line default
            #line hidden
            
            #line 253 "/work/IRLIN276_1/desrozis/IFPEN/working/ArcaneDemo-Gump/common/ArcaneInfra/tools/ArcaneInfra.Tools/ExpressionBuilderGenerator/ServiceGenerator.tt"
            this.Write("Service);\n");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        protected virtual void Initialize() {
            if ((this.Errors.HasErrors == false)) {
                bool _nAcquired = false;
                if (((this.Session != null) && this.Session.ContainsKey("n"))) {
                    object data = this.Session["n"];
                    if (typeof(int).IsAssignableFrom(data.GetType())) {
                        this._nField = ((int)(data));
                        _nAcquired = true;
                    }
                    else {
                        this.Error("The type 'System.Int32' of the parameter 'n' did not match the type passed to the template");
                    }
                }
                if ((_nAcquired == false)) {
                    object data = System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("n");
                    if ((data != null)) {
                        if (typeof(int).IsAssignableFrom(data.GetType())) {
                            this._nField = ((int)(data));
                            _nAcquired = true;
                        }
                        else {
                            this.Error("The type 'System.Int32' of the parameter 'n' did not match the type passed to the template");
                        }
                    }
                }
                bool _mAcquired = false;
                if (((this.Session != null) && this.Session.ContainsKey("m"))) {
                    object data = this.Session["m"];
                    if (typeof(int).IsAssignableFrom(data.GetType())) {
                        this._mField = ((int)(data));
                        _mAcquired = true;
                    }
                    else {
                        this.Error("The type 'System.Int32' of the parameter 'm' did not match the type passed to the template");
                    }
                }
                if ((_mAcquired == false)) {
                    object data = System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("m");
                    if ((data != null)) {
                        if (typeof(int).IsAssignableFrom(data.GetType())) {
                            this._mField = ((int)(data));
                            _mAcquired = true;
                        }
                        else {
                            this.Error("The type 'System.Int32' of the parameter 'm' did not match the type passed to the template");
                        }
                    }
                }
                bool _commandlineAcquired = false;
                if (((this.Session != null) && this.Session.ContainsKey("commandline"))) {
                    object data = this.Session["commandline"];
                    if (typeof(string).IsAssignableFrom(data.GetType())) {
                        this._commandlineField = ((string)(data));
                        _commandlineAcquired = true;
                    }
                    else {
                        this.Error("The type 'System.String' of the parameter 'commandline' did not match the type passed to the template");
                    }
                }
                if ((_commandlineAcquired == false)) {
                    object data = System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("commandline");
                    if ((data != null)) {
                        if (typeof(string).IsAssignableFrom(data.GetType())) {
                            this._commandlineField = ((string)(data));
                            _commandlineAcquired = true;
                        }
                        else {
                            this.Error("The type 'System.String' of the parameter 'commandline' did not match the type passed to the template");
                        }
                    }
                }
            }

        }
    }
    
    public class ServiceGeneratorBase {
        
        private global::System.Text.StringBuilder builder;
        
        private global::System.Collections.Generic.IDictionary<string, object> session;
        
        private global::System.CodeDom.Compiler.CompilerErrorCollection errors;
        
        private string currentIndent = string.Empty;
        
        private global::System.Collections.Generic.Stack<int> indents;
        
        private ToStringInstanceHelper _toStringHelper = new ToStringInstanceHelper();
        
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session {
            get {
                return this.session;
            }
            set {
                this.session = value;
            }
        }
        
        public global::System.Text.StringBuilder GenerationEnvironment {
            get {
                if ((this.builder == null)) {
                    this.builder = new global::System.Text.StringBuilder();
                }
                return this.builder;
            }
            set {
                this.builder = value;
            }
        }
        
        protected global::System.CodeDom.Compiler.CompilerErrorCollection Errors {
            get {
                if ((this.errors == null)) {
                    this.errors = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errors;
            }
        }
        
        public string CurrentIndent {
            get {
                return this.currentIndent;
            }
        }
        
        private global::System.Collections.Generic.Stack<int> Indents {
            get {
                if ((this.indents == null)) {
                    this.indents = new global::System.Collections.Generic.Stack<int>();
                }
                return this.indents;
            }
        }
        
        public ToStringInstanceHelper ToStringHelper {
            get {
                return this._toStringHelper;
            }
        }
        
        public void Error(string message) {
            this.Errors.Add(new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message));
        }
        
        public void Warning(string message) {
            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message);
            val.IsWarning = true;
            this.Errors.Add(val);
        }
        
        public string PopIndent() {
            if ((this.Indents.Count == 0)) {
                return string.Empty;
            }
            int lastPos = (this.currentIndent.Length - this.Indents.Pop());
            string last = this.currentIndent.Substring(lastPos);
            this.currentIndent = this.currentIndent.Substring(0, lastPos);
            return last;
        }
        
        public void PushIndent(string indent) {
            this.Indents.Push(indent.Length);
            this.currentIndent = (this.currentIndent + indent);
        }
        
        public void ClearIndent() {
            this.currentIndent = string.Empty;
            this.Indents.Clear();
        }
        
        public void Write(string textToAppend) {
            this.GenerationEnvironment.Append(textToAppend);
        }
        
        public void Write(string format, params object[] args) {
            this.GenerationEnvironment.AppendFormat(format, args);
        }
        
        public void WriteLine(string textToAppend) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendLine(textToAppend);
        }
        
        public void WriteLine(string format, params object[] args) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendFormat(format, args);
            this.GenerationEnvironment.AppendLine();
        }
        
        public class ToStringInstanceHelper {
            
            private global::System.IFormatProvider formatProvider = global::System.Globalization.CultureInfo.InvariantCulture;
            
            public global::System.IFormatProvider FormatProvider {
                get {
                    return this.formatProvider;
                }
                set {
                    if ((this.formatProvider == null)) {
                        throw new global::System.ArgumentNullException("formatProvider");
                    }
                    this.formatProvider = value;
                }
            }
            
            public string ToStringWithCulture(object objectToConvert) {
                if ((objectToConvert == null)) {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                global::System.Type type = objectToConvert.GetType();
                global::System.Type iConvertibleType = typeof(global::System.IConvertible);
                if (iConvertibleType.IsAssignableFrom(type)) {
                    return ((global::System.IConvertible)(objectToConvert)).ToString(this.formatProvider);
                }
                global::System.Reflection.MethodInfo methInfo = type.GetMethod("ToString", new global::System.Type[] {
                            iConvertibleType});
                if ((methInfo != null)) {
                    return ((string)(methInfo.Invoke(objectToConvert, new object[] {
                                this.formatProvider})));
                }
                return objectToConvert.ToString();
            }
        }
    }
}
