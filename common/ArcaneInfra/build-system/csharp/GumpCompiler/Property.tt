<#@ template language="C#" #>
<# 
var gump = this.Session["gump"] as gump;
var path = this.Session["path"] as string; 
var property = this.Session["property"] as Property; 
var entities = property.EntitiesOfProperty (gump);
#>
// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by tool <#= GumpCompiler.Version.Name #> v<#= GumpCompiler.Version.Number #>.
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
#ifndef <#= gump.model.@namespace.ToUpper() #>_GENERATED_BY_GUMP_<#= property.name.ToUpper() #>_H
#define <#= gump.model.@namespace.ToUpper() #>_GENERATED_BY_GUMP_<#= property.name.ToUpper() #>_H

#include "ArcGeoSim/Gump/Property.h"
#include "ArcGeoSim/Physics/Law2/Property.h"
#include "<#= path #>/Properties/PropertyKind.h"
<# 
foreach(var e in entities) { 
#>
#include "<#= path #>/Entities/<#= e.name #>.h"
<# 
} 
#>

namespace <#= gump.model.@namespace #> {
  
  struct <#= property.name #> 
    : public Gump::Property
    , public Law::<#= property.Dim() #><#= property.Type() #>Property 
  {
  
    <#= property.name #>(const Gump::Property& e) 
      : Gump::Property(e) 
      , Law::<#= property.Dim() #><#= property.Type() #>Property(Gump::Property::uniqueId(), Gump::Property::name()) {} 

<# 
foreach(var entity in entities) { 
#>
    <#= property.name #>(const <#= entity.name #>& e) 
      : Gump::Property(<#= property.Kind () #>, e)
      , Law::<#= property.Dim() #><#= property.Type() #>Property(Gump::Property::uniqueId(), Gump::Property::name()) {} 

    <#= property.name #>(const Gump::EnumeratorT<<#= entity.name #>>& e) 
      : Gump::Property(<#= property.Kind () #>, e)
      , Law::<#= property.Dim() #><#= property.Type() #>Property(Gump::Property::uniqueId(), Gump::Property::name()) {} 
<# 
} 
#>  
  };
  
} 

#endif /* <#= gump.model.@namespace.ToUpper() #>_GENERATED_BY_GUMP_<#= property.name.ToUpper() #>_H */
