<?xml version="1.0" encoding="ISO-8859-1" ?>
<!-- Author : desrozis at Fri Mar 21 12:10:47 2014 -->
<!-- Generated by createNew -->

<module name="TwoPhaseFlowSimulation" version="1.0">
  <description>TUTORIAL : Descripteur du module Answer</description>

  <variables>
    <variable
        field-name="NLTPFA_Tensor"
        name="NLTPFA_Tensor"
        data-type="real3x3"
        item-kind="cell"
        dim="0"
        dump="true"
        need-sync="true"
    />
  </variables>

  <entry-points>
    
    <entry-point 
        method-name="init" 
        name="Init" 
        where="init" 
        property="none" 
        />
    
    <entry-point
        method-name="compute"
        name="Compute"
        where="compute-loop"
        property="none" 
        />
    
  </entry-points>
  
  <options>
    <simple name="permx-var-name" type="string" default="PERMX"/>
    <simple name="permy-var-name" type="string" default="PERMY"/>
    <simple name="permz-var-name" type="string" default="PERMZ"/>
    <simple name="scalar-perm" type="bool" default="true"/>

    <service-instance name="group-creator" type="IGroupCreator" default="StandardGroupCreator" />

    <complex name="numerics" type="Numerics">
    
      <service-instance name="two-points-scheme" type="IDivKGradDiscreteOperator" default="DivKGradTwoPoints"/>
        
      <service-instance name="newton" type="ArcNum::INewtonSolver" />

      <simple name="nltpfa" type="bool" default="false"/>

    </complex>

    <service-instance name="initial-condition" type="IInitialCondition" minOccurs="1" maxOccurs="unbounded" />
    
    <service-instance name="law" type="ILawConfigurator" minOccurs="0" maxOccurs="unbounded" />
   
    <service-instance name="boundary-condition" type="IBoundaryManager" optional="true"/>

    <service-instance name="well-condition" type="IWellManager" optional="true" />

  </options>
  
</module>
