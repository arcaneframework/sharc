// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
//-----------------------------------------------------------------------------
// Copyright 2000-2022 CEA (www.cea.fr) IFPEN (www.ifpenergiesnouvelles.com)
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: Apache-2.0
//-----------------------------------------------------------------------------
#ifndef BOUNDARYCONDITION_IBOUNDARYMANAGER_H
#define BOUNDARYCONDITION_IBOUNDARYMANAGER_H
/* Author : desrozis at Thu Aug 23 15:27:31 2012
 * Generated by createNew
 */

#include "FolderEnumerator.h"

#include "ArcRes/Entities/System.h"
#include "ArcGeoSim/Physics/Gump/Property.h"


/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

class IBoundaryManager
{
public:
  
  typedef FolderEnumerator<Law::ContainerKind::PartialVariable,
                           Law::ItemKind::Face> BoundaryEnumerator;

  virtual ~IBoundaryManager() {}
  
public:

  // Initialisation de la condition
  // ie enregistrement des proprietes, creation des variables et
  // remplissage au temps courant
  virtual void init(ArcRes::System& system) = 0;

  // Mise a jour de la condition
  // ie remplissage au temps courant
  virtual void update(ArcRes::System& system) = 0;

  virtual bool exists() const = 0;

  // Renvoie un enumerateur sur les bords
  virtual BoundaryEnumerator boundaryEnumerator() const = 0;

};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

#define ENUMERATE_BOUNDARY(e, c) \
  for(IBoundaryManager::BoundaryEnumerator e = c; e.hasNext(); ++e)

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

#endif /* BOUNDARYCONDITION_IBOUNDARYMANAGER_H */
