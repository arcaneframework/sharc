// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
//-----------------------------------------------------------------------------
// Copyright 2000-2022 CEA (www.cea.fr) IFPEN (www.ifpenergiesnouvelles.com)
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: Apache-2.0
//-----------------------------------------------------------------------------
/* Author : desrozis at Tue Dec 15 07:45:57 2009
 * Generated by createNew
 */

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

#include "ArcGeoSim/Utils/Utils.h"
#include "DiPhasicTest/Model/ILawConfig.h"

// generated from Constant.law
#include "Constant_law.h"

#include "ConstantLaw_axl.h"

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

class ConstantLawService 
  : public ArcaneConstantLawObject
{
public:
  struct Algo 
  {
  public:

    void compute(Arcane::Real& result) const
    {
      result = m_value;
    }
    Arcane::Real m_value;
  };
public:
  ConstantLawService(const Arcane::ServiceBuildInfo & sbi)
    : ArcaneConstantLawObject(sbi) {}
  ~ConstantLawService() {}
public:
  void initialize(const Law::ScalarRealProperty& p, Law::FunctionManager& law_register);
private:
  Arcane::Real m_value;
  Algo m_algo;
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

void 
ConstantLawService::
initialize(const Law::ScalarRealProperty& p, Law::FunctionManager& law_register)
{
  m_algo.m_value = options()->value();

  Constant::Signature s;
  s.out = p;
  auto f = std::make_shared<Constant::Function>(s, m_algo, &Algo::compute);
  law_register << f;
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

using namespace Arcane;
ARCANE_REGISTER_SERVICE_CONSTANTLAW(ConstantLaw,ConstantLawService);
