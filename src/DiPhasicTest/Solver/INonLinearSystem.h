// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
//-----------------------------------------------------------------------------
// Copyright 2000-2022 CEA (www.cea.fr) IFPEN (www.ifpenergiesnouvelles.com)
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: Apache-2.0
//-----------------------------------------------------------------------------
#ifndef INONLINEARSYSTEM_H
#define INONLINEARSYSTEM_H
/* Author : desrozis at Thu Dec 10 08:56:08 2009
 * Generated by createNew
 */
#include <arcane/ArcaneVersion.h>
namespace Alien
{
  class Vector;
  class Matrix;
}

class INonLinearEquationSystem;
template<class> class CoefficientArrayT;
template<class> class DiscretizationCoefficientArrayT;

#include <boost/shared_ptr.hpp>
#if (ARCANE_VERSION >= 22200)
#include <arcane/mesh/DoFManager.h>
#else
#include <arcane/dof/DoFManager.h>
#endif
#include "ArcGeoSim/Numerics/Discretization/Tools/DiscretizationStencilBuilder.h"

#include <alien/arcane_tools/IIndexManager.h>

class INonLinearSystem
{
public:
  virtual ~INonLinearSystem() {}
public:
  // Initialisation
  virtual void init() = 0;
  // Coefficient des sch�mas
  virtual void setDiscreteOperatorCoefficients(boost::shared_ptr<CoefficientArrayT<Cell> >& transmissivity) = 0;

  virtual void setDiscreteOperatorCoefficients(boost::shared_ptr<DiscretizationCoefficientArrayT<Arcane::DoF>>& transmissivity) = 0;
  // Calcul du profil de la matrice
  virtual void buildMatrixProfil() = 0;
  // Calcul des flux et des mailles amont
  virtual void buildFlux() = 0;
  // Calcul des r�sidus
  virtual void buildResidual() = 0;
  // Calcul de la jacobienne
  virtual void buildJacobian() = 0;
  // Assemblage du syst�me
  virtual void assemble() = 0;
  // Donne le syst�me d'�quations(/inconnues)
  virtual INonLinearEquationSystem * equationSystem() = 0;

  virtual Alien::Matrix const & getJacobian() = 0;
 
  virtual Alien::Vector & getDelta() = 0;

  virtual Alien::Vector & getResidual() = 0;

  virtual Alien::ArcaneTools::IIndexManager::ScalarIndexSet const & getIndexSet(Integer i) = 0;
};

#endif /* INONLINEARSYSTEM_H */
